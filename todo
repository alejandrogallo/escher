* surfaces: update the other routines.
* surfaces: update the documentation.
Added to rep:
nsurf
surf{:}

Object surface:
name -- string
v -- vertices 
f -- faces
frgb -- face color
ftex -- face texture
ergb -- edge color
etex -- edge texture
n -- normals

surface_() -- constructor (update me!)
* surfaces: implement obj writer.
* surfaces to vertex and face representation
* surfaces to edge representation
* clean up grid_isosurface (no edges)
* periodic table of colors, list of textures
* mol_polyhedron can build polyhedra without centers.
* cr_newcell handles the order of the vectors correctly. Check that the new cell is sane.
* Routine for adaptively set the cylinder and sphere based on the number
  of balls and sticks.
* Modify constructors to accept basic parameters.
* Include the observations made with TAGFEM_new in the code:
  1. Three default lights, two of them shadowless.
  2. The modelview matrix is converted to the 3-angle format.
     Create routines for this. Also for angle-rotation.
  3. Re-write povray output to use povray's mesh. Use isonormals
     to compute the normals to the isosurface and make it smooth.
  4. Get ideas from VMD's povray format.
  5. Change the default texture for surfaces.  
  6. Re-write write_obj to take into account the number of edges,
     or to write a mesh directly.
* triangles in obj files
* Kabsch algorithm?
* Problem with cartesian coordinates not being consistent with critic2's.
* BUG: orthographic camera does not play well with the moldelview matrix distance parameter.
* Improve the file readers to make escher go faster.
* routine to build crystal from scratch. Clean up r/g/a,b descriptions.
* adapt shmueli symmetry builder.
* camera from meshlab copy shot!!
* surfaces in the obj file.
* use crystal() for all the object construction -> simpler idiom for if(isfield(bleh))
* molecular template on crystal: mol+cr -> cryst. positions
  of the mol. crtemplate class: atom id + lattice vector.
  molmotif starting from a template.
* convertir ball{:}.x en ballx[:] en algunas rutinas para 
  las operaciones de algebra lineal.
* modificar rep_surface para consistencia con rep_read_basin.
* sticks con los colores de los atomos, enlaces dobles, a rayas, etc.
* similar to cr_molmotif but reads a mol and returns a cell array of connected molecules. 
  To be used with cr_crystalbox.
* define functions for color scales
* cr_molmotif -> mas eficiente.
* cr_molmotif -> incluir parte del borde.
* equivalente a cr_molmotif para eliminar los fragmentos con menos de n atomos.
  de una molecula.
* mol_merge comprueba si hay atomos repetidos.
* mol_getfragment acepta cell array con simbolos + regexp.
* mapeados en povray.
* pintar los ejes de referencia
* construir una supercelda.
* opciones para los sticks.
* lector de offs
* simetria 
* molmotif, etc. -> mas eficiente
* mol_readxyz detects automatically whether it's atomic name or
  atomic symbol.


Daniel
--------
* DONE keyboard vtk window interaction (POVExport, PNG, camera position, ...)
    s key : to solid
    w key : to wireframe
* DONE NCIPlots(colourediso)
* critical points(polyhedra) from multiwfn, ORTEP(ellipsoid), popplot (read .basin)
* surface input generation for quantum espresso
* DONE (partially) mol_readxyz.m --> .py
* set camera parameters for any input data
* DONE dictionary of atom colors and covalent radii
* bond colors and double, triple bonds
* radial distribution function g(r)
* DONE use debug variable ESCHER_DEBUG='ON'
