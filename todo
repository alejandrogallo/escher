* camera from meshlab copy shot!!
* surfaces in the obj file.
* improve cr_newcell
* use crystal() for all the object construction -> simpler idiom for if(isfield(bleh))
* molecular template on crystal: mol+cr -> cryst. positions
  of the mol. crtemplate class: atom id + lattice vector.
  molmotif starting from a template.
* reimplementar __marching_cubes__.m en c++ para isosurface.
* convertir ball{:}.x en ballx[:] en algunas rutinas para 
  las operaciones de algebra lineal.
* modificar rep_surface para consistencia con rep_read_basin.
* sticks con los colores de los atomos, enlaces dobles, a rayas, etc.
* A~nadir mol.nat .
* completar devs.org
* similar to cr_molmotif but reads a mol and returns a cell array of connected molecules. 
  To be used with cr_crystalbox.
* define functions for color scales
* cr_molmotif -> mas eficiente.
* cr_molmotif -> incluir parte del borde.
* equivalente a cr_molmotif para eliminar los fragmentos con menos de n atomos.
  de una molecula.
* mol_merge comprueba si hay atomos repetidos.
* mol_getfragment acepta cell array con simbolos + regexp.
* mapeados en povray.
* pintar los ejes de referencia
* construir una supercelda.
* opciones para los sticks.
* lector de offs
* simetria 
* molmotif, etc. -> mas eficiente
* mol_readxyz detects automatically whether it's atomic name or
  atomic symbol.


Daniel
--------
* keyboard vtk window interaction (POVExport, PNG, camera position, ...)
* NCIPlots(colourediso), critical points(polyhedra), ORTEP(ellipsoid),
    popplot
* surface espresso input generation
* mol_readxyz.m --> .py
* set camera parameters for any input data
* dictionary of atom colors and radius
* bond colors and double, triple bonds
* radial distribution function g(r)
* use debug variable ESCHER_DEBUG='ON'
